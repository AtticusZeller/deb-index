name: Update APT Repository
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev apt-utils

      - name: Setup Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "allow-preset-passphrase" > ~/.gnupg/gpg-agent.conf
          gpg-connect-agent RELOADAGENT /bye
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --sign --armor --output /dev/null /dev/null

      - name: Update Repository
        run: |
          mkdir -p {pool,dists,version-lock}/

          for config in configs/*.json; do
            echo "Processing config: $config"
            bash scripts/build-repo.sh "$config"
          done

          bash scripts/build-repo.sh --generate-metadata

      - name: Commit New version
        run: |

          if [[ -n $(git status --porcelain version-lock/) ]]; then
            echo "Changes detected in version-lock directory"
            git add version-lock/
            git add dists/
            git add pool/
            git commit -m "Update new version"
            git push
          else
            echo "No changes to commit in version-lock"
          fi

      - name: Create Jekyll config
        run: |
          cat > _config.yml << 'EOF'
          title: DEB Package Repository
          description: Custom APT repository for various packages
          show_downloads: true
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy to GitHub Pages'
          enable_jekyll: true
